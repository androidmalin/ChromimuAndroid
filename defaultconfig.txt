aec_untrusted_delay_for_testing
    Current value (from the default) = false
      From //third_party/webrtc/modules/audio_processing/BUILD.gn:17

    Disables the usual mode where we trust the reported system delay
    values the AEC receives. The corresponding define is set appropriately
    in the code, but it can be force-enabled here for testing.

allow_critical_memory_pressure_handling_in_foreground
    Current value (from the default) = false
      From //content/common/features.gni:13

    Whether to perform critical memory pressure handling when in foreground (if
    false, critical memory pressure is treated like moderate pressure in foreground).

android_channel
    Current value (from the default) = "default"
      From //chrome/android/channel.gni:8

    The channel to build on Android: stable, beta, dev, canary, work, or
    default. "default" should be used on non-official builds.

android_default_version_code
    Current value (from the default) = "1"
      From //build/config/android/config.gni:122

    Android versionCode for android_apk()s that don't explicitly set one.

android_default_version_name
    Current value (from the default) = "Developer Build"
      From //build/config/android/config.gni:125

    Android versionName for android_apk()s that don't explicitly set one.

android_full_debug
    Current value (from the default) = false
      From //build/config/compiler/BUILD.gn:44

    Normally, Android builds are lightly optimized, even for debug builds, to
    keep binary size down. Setting this flag to true disables such optimization

android_keystore_name
    Current value (from the default) = "chromiumdebugkey"
      From //build/config/android/config.gni:131

    The name of the keystore to use for signing builds.

android_keystore_password
    Current value (from the default) = "chromium"
      From //build/config/android/config.gni:134

    The password for the keystore to use for signing builds.

android_keystore_path
    Current value (from the default) = "//build/android/chromium-debug.keystore"
      From //build/config/android/config.gni:128

    The path to the keystore to use for signing builds.

android_libcpp_lib_dir
    Current value (from the default) = ""
      From //build/config/android/config.gni:119

    Libc++ library directory. Override to use a custom libc++ binary.

android_ndk_major_version
    Current value (from the default) = 12
      From //build/config/android/config.gni:108

android_ndk_root
    Current value = "/home/malin/ndk/android-ndk-r12b"
      From //out/Default/args.gn:9
    Overridden from the default = "//third_party/android_tools/ndk"
      From //build/config/android/config.gni:106

android_ndk_version
    Current value (from the default) = "r12b"
      From //build/config/android/config.gni:107

android_sdk_build_tools_version
    Current value = "27.0.1"
      From //out/Default/args.gn:11
    Overridden from the default = "27.0.1"
      From //build/config/android/config.gni:112

android_sdk_platform_version
    Current value (from the default) = "27"
      From //build/config/android/config.gni:185

android_sdk_release
    Current value (from the default) = "o_mr1"
      From //build/config/android/config.gni:34

    Android SDK release. Currently, only "o_mr1" is publicly supported.

android_sdk_root
    Current value = "/home/malin/sdk"
      From //out/Default/args.gn:10
    Overridden from the default = "//third_party/android_tools/sdk"
      From //build/config/android/config.gni:110

android_sdk_tools_version_suffix
    Current value (from the default) = "-26.0.0-dev"
      From //build/config/android/config.gni:113

android_sdk_version
    Current value (from the default) = "27"
      From //build/config/android/config.gni:111

apm_debug_dump
    Current value (from the default) = false
      From //third_party/webrtc/webrtc.gni:72

    Selects whether debug dumps for the audio processing module
    should be generated.

arm_arch
    Current value (from the default) = ""
      From //build/config/arm.gni:19

    The ARM architecture. This will be a string like "armv6" or "armv7-a".
    An empty string means to use the default for the arm_version.

arm_float_abi
    Current value (from the default) = ""
      From //build/config/arm.gni:28

    The ARM floating point mode. This is either the string "hard", "soft", or
    "softfp". An empty string means to use the default one for the
    arm_version.

arm_fpu
    Current value (from the default) = ""
      From //build/config/arm.gni:23

    The ARM floating point hardware. This will be a string like "neon" or
    "vfpv3". An empty string means to use the default for the arm_version.

arm_optionally_use_neon
    Current value (from the default) = false
      From //build/config/arm.gni:39

    Whether to enable optional NEON code paths.

arm_tune
    Current value (from the default) = ""
      From //build/config/arm.gni:33

    The ARM variant-specific tuning mode. This will be a string like "armv6"
    or "cortex-a15". An empty string means to use the default for the
    arm_version.

arm_use_neon
    Current value (from the default) = ""
      From //build/config/arm.gni:36

    Whether to use the neon FPU instruction set or not.

arm_use_thumb
    Current value (from the default) = true
      From //build/config/arm.gni:43

    Thumb is a reduced instruction set available on some ARM processors that
    has increased code density.

arm_version
    Current value (from the default) = 7
      From //build/config/arm.gni:15

    Version of the ARM processor when compiling on ARM. Ignored on non-ARM
    platforms.

asan_globals
    Current value (from the default) = true
      From //build/config/sanitizers/sanitizers.gni:148

    Detect overflow/underflow for global objects.
   
    Mac: http://crbug.com/352073

auto_profile_path
    Current value (from the default) = ""
      From //build/config/compiler/BUILD.gn:88

    AFDO (Automatic Feedback Directed Optimizer) is a form of profile-guided
    optimization that GCC supports. It used by ChromeOS in their official
    builds. To use it, set auto_profile_path to the path to a file containing
    the needed gcov profiling data.

binutils_path
    Current value (from the default) = "../../third_party/binutils/Linux_x64/Release/bin"
      From //build/config/compiler/BUILD.gn:53

blink_gc_plugin
    Current value (from the default) = true
      From //third_party/WebKit/Source/BUILD.gn:17

    Set to true to enable the clang plugin that checks the usage of the  Blink
    garbage-collection infrastructure during compilation.

blink_gc_plugin_option_do_dump_graph
    Current value (from the default) = false
      From //third_party/WebKit/Source/BUILD.gn:21

    Set to true to have the clang Blink GC plugin emit class graph (in JSON)
    with typed pointer edges; for debugging or other (internal) uses.

blink_gc_plugin_option_warn_unneeded_finalizer
    Current value (from the default) = false
      From //third_party/WebKit/Source/BUILD.gn:26

    Set to true to have the clang Blink GC plugin additionally check if
    a class has an empty destructor which would be unnecessarily invoked
    when finalized.

build_angle_deqp_tests
    Current value (from the default) = false
      From //third_party/angle/src/tests/BUILD.gn:19

    Don't build dEQP by default.

build_apk_secondary_abi
    Current value (from the default) = true
      From //build/config/android/abi.gni:22

    Builds secondary abi for APKs, supports build 32-bit arch as secondary
    abi in 64-bit Monochrome and WebView.

build_libsrtp_tests
    Current value (from the default) = false
      From //third_party/libsrtp/BUILD.gn:10

    Tests may not be appropriate for some build environments, e.g. Windows.
    Rather than enumerate valid options, we just let clients ask for them.

build_sfntly_samples
    Current value (from the default) = false
      From //third_party/sfntly/BUILD.gn:9

    Flip to true to build sfntly sample programs.

build_with_mozilla
    Current value (from the default) = false
      From //third_party/webrtc/webrtc.gni:92

    Enable to use the Mozilla internal settings.

cc_wrapper
    Current value (from the default) = ""
      From //build/toolchain/cc_wrapper.gni:36

    Set to "ccache", "icecc" or "distcc".  Probably doesn't work on windows.

chrome_pgo_phase
    Current value (from the default) = 0
      From //build/config/compiler/pgo/pgo.gni:13

    Specify the current PGO phase.
    Here's the different values that can be used:
        0 : Means that PGO is turned off.
        1 : Used during the PGI (instrumentation) phase.
        2 : Used during the PGO (optimization) phase.
   
    TODO(sebmarchand): Add support for the PGU (update) phase.

clang_base_path
    Current value (from the default) = "//third_party/llvm-build/Release+Asserts"
      From //build/config/clang/clang.gni:12

clang_use_chrome_plugins
    Current value (from the default) = true
      From //build/config/clang/clang.gni:10

    Indicates if the build should use the Chrome-specific plugins for enforcing
    coding guidelines, etc. Only used when compiling with Clang.

clang_version
    Current value (from the default) = "6.0.0"
      From //build/toolchain/toolchain.gni:51

    Clang compiler version. Clang files are placed at version-dependent paths.

com_init_check_hook_disabled
    Current value (from the default) = false
      From //base/BUILD.gn:55

    Set to true to disable COM init check hooks.

compile_credentials
    Current value (from the default) = false
      From //sandbox/linux/BUILD.gn:17

compile_suid_client
    Current value (from the default) = false
      From //sandbox/linux/BUILD.gn:15

compute_grit_inputs_for_analyze
    Current value (from the default) = false
      From //tools/grit/grit_rule.gni:106

    When set, this will fork out to grit at GN-time to get all inputs
    referenced by the .grd file.
   
    Normal builds don't need this since proper incremental builds are handled
    by grit writing out the inputs in .d files at build-time. But for analyze
    to work on the bots, it needs to know about all input files at GN-time so
    it knows which tests to trigger when something changes. This option will
    slow down the GN run.

concurrent_links
    Current value (from the default) = -1
      From //build/toolchain/concurrent_links.gni:19

    Limit the number of concurrent links; we often want to run fewer
    links at once than we do compiles, because linking is memory-intensive.
    The default to use varies by platform and by the amount of memory
    available, so we call out to a script to get the right value.

content_shell_product_name
    Current value (from the default) = "Content Shell"
      From //content/shell/BUILD.gn:28

content_shell_version
    Current value (from the default) = "99.77.34.5"
      From //content/shell/BUILD.gn:29

current_cpu
    Current value (from the default) = ""
      (Internally set; try `gn help current_cpu`.)

current_os
    Current value (from the default) = ""
      (Internally set; try `gn help current_os`.)

custom_toolchain
    Current value (from the default) = ""
      From //build/config/BUILDCONFIG.gn:148

    Allows the path to a custom target toolchain to be injected as a single
    argument, and set as the default toolchain.

dcheck_always_on
    Current value (from the default) = false
      From //build/config/dcheck_always_on.gni:10

    Set to true to enable dcheck in Release builds.
    is_syzyasan defaults to logging/non-fatal DCHECKs - see crbug.com/596231.

debug_devtools
    Current value (from the default) = false
      From //third_party/WebKit/public/public_features.gni:12

    If debug_devtools is set to true, JavaScript files for DevTools are stored
    as is and loaded from disk. Otherwise, a concatenated file is stored in
    resources.pak. It is still possible to load JS files from disk by passing
    --debug-devtools cmdline switch.

debuggable_apks
    Current value (from the default) = true
      From //build/config/android/config.gni:148

    Mark APKs as android:debuggable="true".

disable_brotli_filter
    Current value (from the default) = false
      From //net/features.gni:27

    Do not disable brotli filter by default.

disable_ffmpeg_video_decoders
    Current value (from the default) = true
      From //media/media_options.gni:132

    On Android, FFMpeg is built without video decoders by default.
    This flag gives the option to override that decision in case there are no
    hardware decoders. To do so, you will also need to update ffmpeg build files
    in order to define which decoders to build in.

disable_file_support
    Current value = true
      From //out/Default/args.gn:12
    Overridden from the default = false
      From //net/features.gni:12

    Disables support for file URLs.  File URL support requires use of icu.

disable_ftp_support
    Current value = true
      From //out/Default/args.gn:13
    Overridden from the default = false
      From //net/features.gni:17

disable_goma
    Current value (from the default) = false
      From //build/toolchain/goma.gni:13

    Set to true to disable goma without update of command line.
    Changing this value does not cause full rebuild.

disable_incremental_isolated_processes
    Current value (from the default) = false
      From //build/config/android/config.gni:164

    Disables process isolation when building _incremental targets.
    Required for Android M+ due to SELinux policies (stronger sandboxing).

disable_libfuzzer
    Current value (from the default) = false
      From //build/config/sanitizers/sanitizers.gni:95

    Helper variable for testing builds with disabled libfuzzer.
    Not for client use.

emma_coverage
    Current value (from the default) = false
      From //build/config/android/config.gni:155

    Enables EMMA Java code coverage. Instruments classes during build to
    produce .ec files during runtime

emma_filter
    Current value (from the default) = ""
      From //build/config/android/config.gni:160

    EMMA filter string consisting of a list of inclusion/exclusion patterns
    separated with whitespace and/or comma. Only has effect if
    emma_coverage==true

enable_ac3_eac3_audio_demuxing
    Current value (from the default) = false
      From //media/media_options.gni:63

    Enables AC3/EAC3 audio demuxing. This is enabled only on Chromecast, since
    it only provides demuxing, and is only useful for AC3/EAC3 audio
    pass-through to HDMI sink on Chromecast.

enable_app_list
    Current value (from the default) = false
      From //chrome/common/features.gni:22

enable_av1_decoder
    Current value (from the default) = false
      From //third_party/libaom/options.gni:5

    Enable decoding AV1 video files.

enable_background
    Current value (from the default) = false
      From //chrome/common/features.gni:25

    Enables support for background apps.

enable_basic_print_dialog
    Current value (from the default) = true
      From //chrome/common/features.gni:29

    Enable the printing system dialog for platforms that support printing
    and have a system dialog.

enable_basic_printing
    Current value (from the default) = true
      From //printing/features/features.gni:10

    Enable basic printing support and UI.

enable_callgrind
    Current value (from the default) = false
      From //third_party/pdfium/pdfium.gni:54

    Enable callgrind for performance profiling

enable_captive_portal_detection
    Current value (from the default) = false
      From //chrome/common/features.gni:31

enable_cbcs_encryption_scheme
    Current value (from the default) = false
      From //media/media_options.gni:70

    Enable support for the 'cbcs' encryption scheme added by MPEG Common
    Encryption 3rd Edition (ISO/IEC 23001-7), published 02/15/2016.

enable_cdm_host_verification
    Current value (from the default) = false
      From //media/media_options.gni:163

enable_cdm_storage_id
    Current value (from the default) = false
      From //media/media_options.gni:167

    Enable Storage ID which is used by CDMs. This is only available with chrome
    branding, but may be overridden by other embedders.

enable_chrome_android_internal
    Current value (from the default) = false
      From //build/config/android/config.gni:25

    Enables using the internal Chrome for Android repository. The default
    value depends on whether the repository is available, and if it's not but
    this argument is manually set to True, the generation will fail.
    The main purpose of this argument is to avoid having to maintain 2
    repositories to support both public only and internal builds.

enable_d3d11_video_decoder
    Current value (from the default) = false
      From //media/media_options.gni:94

    A temporary arg for enabling D3D11VideoDecoder

enable_debugallocation
    Current value (from the default) = false
      From //base/allocator/BUILD.gn:13

    Provide a way to force disable debugallocation in Debug builds,
    e.g. for profiling (it's more rare to profile Debug builds,
    but people sometimes need to do that).

enable_desktop_in_product_help
    Current value (from the default) = false
      From //components/feature_engagement/features.gni:9

    In-Product Help is only available in Windows and Linux OS for
    desktop. Other platforms such as Mac OS currently does not support
    Views and there have been no strong feelings about CrOS.

enable_dolby_vision_demuxing
    Current value (from the default) = false
      From //media/media_options.gni:79

    Enable Dolby Vision demuxing. Enable by default for Chromecast. Actual
    decoding must be provided by the platform. Note some Dolby Vision profiles
    which are encoded using HEVC require |enable_hevc_demuxing| to be enabled.

enable_downloadable_strings
    Current value (from the default) = true
      From //chrome/common/features.gni:69

    Enable donwloadable language PAK files to reduce the size of the main
    Chrome APK. TODO(digit): Restrict this to official builds.

enable_extensions
    Current value (from the default) = false
      From //extensions/features/features.gni:8

enable_full_stack_frames_for_profiling
    Current value (from the default) = false
      From //build/config/compiler/BUILD.gn:61

    Compile in such a way as to make it possible for the profiler to unwind full
    stack frames. Setting this flag has a large effect on the performance of the
    generated code than just setting profiling, but gives the profiler more
    information to analyze.
    Requires profiling to be set to true.

enable_google_now
    Current value (from the default) = false
      From //chrome/common/features.gni:35

    Google Now is disabled to prepare for its removal.
    http://crbug.com/539674

enable_gvr_services
    Current value (from the default) = true
      From //device/vr/features/features.gni:10

    TODO(733935): Enable for other Android architectures too. Currently we only
    support arm and arm64.

enable_hangout_services_extension
    Current value (from the default) = false
      From //chrome/common/features.gni:39

    Hangout services is an extension that adds extra features to Hangouts.
    It is enableable separately to facilitate testing.

enable_hevc_demuxing
    Current value (from the default) = false
      From //media/media_options.gni:74

    Enable HEVC/H265 demuxing. Actual decoding must be provided by the
    platform. Enable by default for Chromecast.

enable_hls_sample_aes
    Current value (from the default) = false
      From //media/media_options.gni:84

    Enable HLS with SAMPLE-AES decryption.

enable_incremental_dx
    Current value (from the default) = false
      From //build/config/android/config.gni:189

    Speed up dexing using dx --incremental.

enable_incremental_javac
    Current value = false
      From //out/Default/args.gn:8
    Overridden from the default = false
      From //build/config/android/config.gni:167

    Speeds up incremental compiles by compiling only changed files.

enable_internal_app_remoting_targets
    Current value (from the default) = false
      From //remoting/remoting_options.gni:18

    Set this to enable building internal AppRemoting apps.

enable_ipc_fuzzer
    Current value (from the default) = false
      From //tools/ipc_fuzzer/ipc_fuzzer.gni:15

enable_ipc_logging
    Current value (from the default) = false
      From //ipc/BUILD.gn:14

    Enabling debug builds automatically sets enable_ipc_logging to true.

enable_iterator_debugging
    Current value (from the default) = true
      From //build/config/BUILD.gn:35

    When set (the default) enables C++ iterator debugging in debug builds.
    Iterator debugging is always off in release builds (technically, this flag
    affects the "debug" config, which is always available but applied by
    default only in debug builds).
   
    Iterator debugging is generally useful for catching bugs. But it can
    introduce extra locking to check the state of an iterator against the state
    of the current object. For iterator- and thread-heavy code, this can
    significantly slow execution.

enable_leakcanary
    Current value (from the default) = false
      From //third_party/leakcanary/config.gni:6

enable_linux_installer
    Current value (from the default) = false
      From //chrome/installer/BUILD.gn:11

enable_location_source
    Current value (from the default) = true
      From //base/BUILD.gn:47

    Indicates if the Location object contains the source code information
    (file, function, line). False means only the program counter (and currently
    file name) is saved.

enable_mdns
    Current value (from the default) = false
      From //net/features.gni:30

    Multicast DNS.

enable_media_codec_video_decoder
    Current value (from the default) = false
      From //media/media_options.gni:91

    A temporary arg for enabling MCVD while it's being implemented.
    See http://crbug.com/660942

enable_media_remoting
    Current value (from the default) = true
      From //media/media_options.gni:252

    This switch defines whether the Media Remoting implementation will be built.
    When enabled, media is allowed to be renderer and played back on remote
    devices when the tab is being casted and other conditions are met.

enable_media_remoting_rpc
    Current value (from the default) = false
      From //media/media_options.gni:258

    Media Remoting RPC is disabled on Android since it's unused but increases
    the native binary size by ~70Kb.

enable_message_center
    Current value (from the default) = false
      From //ui/base/ui_features.gni:18

    Whether the message center should be included for displaying notifications.

enable_mojo_media
    Current value (from the default) = true
      From //media/media_options.gni:145

    Experiment to enable mojo media services (e.g. "renderer", "cdm", see
    |mojo_media_services|). When enabled, selected mojo paths will be enabled in
    the media pipeline and corresponding services will hosted in the selected
    remote process (e.g. "utility" process, see |mojo_media_host|).

enable_mojo_tracing
    Current value (from the default) = false
      From //mojo/public/cpp/bindings/BUILD.gn:9

enable_mojom_typemapping
    Current value (from the default) = true
      From //mojo/public/tools/bindings/mojom.gni:25

    Indicates whether typemapping should be supported in this build
    configuration. This may be disabled when building external projects which
    depend on //mojo but which do not need/want all of the Chromium tree
    dependencies that come with typemapping.
   
    Note that (perhaps obviously) a huge amount of Chromium code will not build
    with typemapping disabled, so it is never valid to set this to |false| in
    any Chromium build configuration.

enable_mse_mpeg2ts_stream_parser
    Current value (from the default) = false
      From //media/media_options.gni:66

enable_mus
    Current value (from the default) = false
      From //ui/base/ui_features.gni:22

    Set to true to if mus (aka the UI service) is enabled. Use --mus (or --mash
    in chrome code) to start in mus/mash.

enable_nacl
    Current value (from the default) = false
      From //components/nacl/features.gni:13

enable_nacl_nonsfi
    Current value (from the default) = true
      From //components/nacl/features.gni:18

    Non-SFI is not yet supported on mipsel

enable_native_notifications
    Current value (from the default) = true
      From //chrome/common/features.gni:42

    Enables usage of the system-provided notification center.

enable_native_window_nav_buttons
    Current value (from the default) = false
      From //ui/views/features.gni:12

enable_net_mojo
    Current value (from the default) = true
      From //net/features.gni:45

enable_nocompile_tests
    Current value (from the default) = false
      From //build/nocompile.gni:63

enable_offline_pages
    Current value (from the default) = true
      From //components/offline_pages/features/features.gni:8

    Whether to enable OfflinePages support. Currently user-visible features
    are Android-only.

enable_offline_pages_harness
    Current value (from the default) = false
      From //components/offline_pages/features/features.gni:12

    This enables test API for locally-built harness which is used for quality
    evaluations. Requires setting this variable manually at local environment.

enable_one_click_signin
    Current value (from the default) = false
      From //chrome/common/features.gni:46

enable_openvr
    Current value (from the default) = false
      From //device/vr/features/features.gni:12

enable_pdf
    Current value (from the default) = false
      From //pdf/features.gni:12

enable_plugins
    Current value (from the default) = false
      From //ppapi/features/features.gni:10

enable_precompiled_headers
    Current value (from the default) = true
      From //build/config/pch.gni:11

    Precompiled header file support is by default available,
    but for distributed build system uses (like goma) or when
    doing official builds.

enable_print_preview
    Current value (from the default) = false
      From //printing/features/features.gni:14

    Enable printing with print preview. It does not imply
    enable_basic_printing. It's possible to build Chrome with preview only.

enable_profiling
    Current value (from the default) = false
      From //build/config/compiler/compiler.gni:30

    Compile in such a way as to enable profiling of the generated code. For
    example, don't omit the frame pointer and leave in symbols.

enable_proguard_obfuscation
    Current value (from the default) = false
      From //chrome/android/chrome_public_apk_tmpl.gni:14

    Enables ProGuard obfuscation of Chromium packages.

enable_reading_list
    Current value (from the default) = true
      From //components/reading_list/features/reading_list.gni:8

    Controls whether reading list support is active or not. Currently only
    supported on iOS (on other platforms, the feature is always disabled).

enable_remoting
    Current value (from the default) = true
      From //remoting/remoting_enable.gni:13

enable_remoting_jscompile
    Current value (from the default) = false
      From //remoting/remoting_options.gni:15

    Set this to run the jscompile checks after building the webapp.

enable_reporting
    Current value (from the default) = true
      From //net/features.gni:33

    Reporting not used on iOS.

enable_resource_whitelist_generation
    Current value (from the default) = false
      From //build/config/android/config.gni:330

    Enables used resource whitelist generation. Set for official builds only
    as a large amount of build output is generated.

enable_runtime_media_renderer_selection
    Current value (from the default) = false
      From //media/media_options.gni:158

    When enabled, this feature allows developers to use a runtime flag to
    choose the implementation of the renderer that is used. On a build which
    enables the mojo renderer, if --disable-mojo-renderer is passed at start-up,
    the "default" renderer will be used instead. Both renderer implementations
    will be linked if this feature is enabled, increasing the binary size. This
    feature does not make sense if the mojo renderer is not enabled.

enable_service_discovery
    Current value (from the default) = false
      From //chrome/common/features.gni:48

enable_session_service
    Current value (from the default) = false
      From //chrome/common/features.gni:52

    Enables use of the session service, which is enabled by default.
    Android stores them separately on the Java side.

enable_standalone_cdm_service
    Current value (from the default) = false
      From //media/media_options.gni:207

    Force to host the CDM service in standalone "cdm" service instead of the
    "media" service hosted in the process specified by "mojo_media_host". Other
    mojo media services will not be affected. If true, the "cdm" service must
    also be included in "mojo_media_services".

enable_supervised_users
    Current value (from the default) = true
      From //chrome/common/features.gni:54

enable_swiftshader
    Current value (from the default) = false
      From //ui/gl/BUILD.gn:13

enable_test_mojo_media_client
    Current value (from the default) = false
      From //media/media_options.gni:150

    Enable the TestMojoMediaClient to be used in mojo MediaService. This is for
    testing only and will override the default platform MojoMediaClient, if any.

enable_vr
    Current value (from the default) = true
      From //device/vr/features/features.gni:17

    Enable VR device support whenever VR device SDK(s) are supported.

enable_vulkan
    Current value (from the default) = false
      From //gpu/vulkan/features.gni:9

    Enable experimental vulkan backend.

enable_wayland_server
    Current value (from the default) = false
      From //chrome/common/features.gni:57

    Indicates if Wayland display server support is enabled.

enable_webrtc
    Current value (from the default) = true
      From //media/media_options.gni:81

enable_websockets
    Current value = false
      From //out/Default/args.gn:14
    Overridden from the default = true
      From //net/features.gni:16

    WebSockets and socket stream code are not used on iOS and are optional in
    cronet.

enable_widevine
    Current value (from the default) = false
      From //third_party/widevine/cdm/widevine.gni:7

    Allow widevinecdmadapter to be built in Chromium.

enable_wifi_display
    Current value (from the default) = false
      From //extensions/features/features.gni:12

    Enables Wi-Fi Display functionality
    WARNING: This enables MPEG Transport Stream (MPEG-TS) encoding!

fatal_linker_warnings
    Current value (from the default) = true
      From //build/config/compiler/BUILD.gn:77

    Enable fatal linker warnings. Building Chromium with certain versions
    of binutils can cause linker warning.
    See: https://bugs.chromium.org/p/chromium/issues/detail?id=457359

ffmpeg_branding
    Current value (from the default) = "Chromium"
      From //third_party/ffmpeg/ffmpeg_options.gni:34

    Controls whether we build the Chromium or Google Chrome version of FFmpeg.
    The Google Chrome version contains additional codecs. Typical values are
    Chromium, Chrome, and ChromeOS.

ffmpeg_use_atomics_fallback
    Current value (from the default) = false
      From //third_party/ffmpeg/ffmpeg_options.gni:51

    Set to true to force the use of ffmpeg's stdatomic fallback code.
   
    Windows and GCC prior to 4.9 lack stdatomic.h.
   
    This is also useful for developers who use icecc, which relies upon
    clang's -frewrite-includes flag which is broken with #include_next
    directives as used in chromium's clang stdatomic.h.
    Some background: https://bugs.llvm.org/show_bug.cgi?id=26828

fieldtrial_testing_like_official_build
    Current value (from the default) = false
      From //build/config/features.gni:46

    Set to true make a build that disables activation of field trial tests
    specified in testing/variations/fieldtrial_testing_config_*.json.
    Note: this setting is ignored if is_chrome_branded.

full_wpo_on_official
    Current value (from the default) = false
      From //build/config/compiler/compiler.gni:148

gcc_target_rpath
    Current value (from the default) = ""
      From //build/config/gcc/BUILD.gn:18

    When non empty, overrides the target rpath value. This allows a user to
    make a Chromium build where binaries and shared libraries are meant to be
    installed into separate directories, like /usr/bin/chromium and
    /usr/lib/chromium for instance. It is useful when a build system that
    generates a whole target root filesystem (like Yocto) is used on top of gn,
    especially when cross-compiling.
    Note: this gn arg is similar to gyp target_rpath generator flag.

generate_linker_map
    Current value (from the default) = false
      From //build/toolchain/toolchain.gni:28

    Used for binary size analysis.
    Currently disabled on LLD because of a bug (fixed upstream).
    See https://crbug.com/716209.

generate_order_files
    Current value (from the default) = false
      From //build/config/chrome_build.gni:17

    Turn this on to generate order files. See
    https://chromium.googlesource.com/chromium/src/+/master/docs/win_order_files.md

gold_path
    Current value (from the default) = false
      From //build/config/compiler/BUILD.gn:65

    When we are going to use gold we need to find it.
    This is initialized below, after use_gold might have been overridden.

goma_dir
    Current value (from the default) = "/home/malin/goma"
      From //build/toolchain/goma.gni:21

    Absolute directory containing the gomacc binary.

google_api_key
    Current value (from the default) = ""
      From //google_apis/BUILD.gn:46

    Set these to bake the specified API keys and OAuth client
    IDs/secrets into your build.
   
    If you create a build without values baked in, you can instead
    set environment variables to provide the keys at runtime (see
    src/google_apis/google_api_keys.h for details).  Features that
    require server-side APIs may fail to work if no keys are
    provided.
   
    Note that if you are building an official build or if
    use_official_google_api_keys has been set to trie (explicitly or
    implicitly), these values will be ignored and the official
    keys will be used instead.

google_default_client_id
    Current value (from the default) = ""
      From //google_apis/BUILD.gn:49

    See google_api_key.

google_default_client_secret
    Current value (from the default) = ""
      From //google_apis/BUILD.gn:52

    See google_api_key.

has_native_accessibility
    Current value (from the default) = false
      From //ui/base/ui_features.gni:15

    Whether the platform provides a native accessibility toolkit.

host_byteorder
    Current value (from the default) = "undefined"
      From //build/config/host_byteorder.gni:9

host_cpu
    Current value (from the default) = "x64"
      (Internally set; try `gn help host_cpu`.)

host_os
    Current value (from the default) = "linux"
      (Internally set; try `gn help host_os`.)

host_pkg_config
    Current value (from the default) = ""
      From //build/config/linux/pkg_config.gni:36

    A optional pkg-config wrapper to use for tools built on the host.

host_toolchain
    Current value (from the default) = ""
      From //build/config/BUILDCONFIG.gn:152

    This should not normally be set as a build argument.  It's here so that
    every toolchain can pass through the "global" value via toolchain_args().

icu_use_data_file
    Current value (from the default) = true
      From //third_party/icu/config.gni:15

    Tells icu to load an external data file rather than rely on the icudata
    being linked directly into the binary.
   
    This flag is a bit confusing. As of this writing, icu.gyp set the value to
    0 but common.gypi sets the value to 1 for most platforms (and the 1 takes
    precedence).
   
    TODO(GYP) We'll probably need to enhance this logic to set the value to
    true or false in similar circumstances.

ignore_elf32_limitations
    Current value (from the default) = false
      From //build_overrides/build.gni:41

    Android 32-bit non-component, non-clang builds cannot have symbol_level=2
    due to 4GiB file size limit, see https://crbug.com/648948.
    Set this flag to true to skip the assertion.

include_transport_security_state_preload_list
    Current value (from the default) = true
      From //net/features.gni:41

    Includes the transport security state preload list. This list includes
    mechanisms (e.g. HSTS, HPKP) to enforce trusted connections to a significant
    set of hardcoded domains. While this list has a several hundred KB of binary
    size footprint, this flag should not be disabled unless the embedder is
    willing to take the responsibility to make sure that all important
    connections use HTTPS.

include_vr_data
    Current value (from the default) = false
      From //device/vr/features/features.gni:20

    Whether to include VR extras like test APKs in non-VR-specific targets

incremental_apk_by_default
    Current value (from the default) = false
      From //build/config/android/config.gni:172

    Build incremental targets whenever possible.
    Ex. with this arg set to true, the chrome_public_apk target result in
    chrome_public_apk_incremental being built.

ios_deployment_target
    Current value (from the default) = "10.0"
      From //build/config/ios/ios_sdk_overrides.gni:10

    Version of iOS that we're targeting.

is_asan
    Current value (from the default) = false
      From //build/config/sanitizers/sanitizers.gni:11

    Compile for Address Sanitizer to find memory bugs.

is_cast_audio_only
    Current value (from the default) = false
      From //build/config/chromecast_build.gni:14

    Set this true for an audio-only Chromecast build.

is_cast_desktop_build
    Current value (from the default) = false
      From //build/config/chromecast_build.gni:26

    True if Chromecast build is targeted for linux desktop. This type of build
    is useful for testing and development, but currently supports only a subset
    of Cast functionality. Though this defaults to true for x86 Linux devices,
    this should be overriden manually for an embedded x86 build.
    TODO(slan): Remove instances of this when x86 is a fully supported platform.

is_cast_using_cma_backend
    Current value (from the default) = false
      From //media/media_options.gni:87

    If true, use cast CMA backend instead of default chromium media pipeline.

is_cfi
    Current value (from the default) = false
      From //build/config/sanitizers/sanitizers.gni:58

    Compile with Control Flow Integrity to protect virtual calls and casts.
    See http://clang.llvm.org/docs/ControlFlowIntegrity.html
   
    TODO(pcc): Remove this flag if/when CFI is enabled in all official builds.

is_chrome_branded
    Current value (from the default) = false
      From //build/config/chrome_build.gni:9

    Select the desired branding flavor. False means normal Chromium branding,
    true means official Google Chrome branding (requires extra Google-internal
    resources).

is_chromecast
    Current value (from the default) = false
      From //build/config/chromecast_build.gni:11

    Set this true for a Chromecast build. Chromecast builds are supported on
    Linux and Android.

is_clang
    Current value = true
      From //out/Default/args.gn:6
    Overridden from the default = true
      From //build/config/BUILDCONFIG.gn:139

is_component_build
    Current value = false
      From //out/Default/args.gn:5
    Overridden from the default = false
      From //build/config/BUILDCONFIG.gn:170

is_component_ffmpeg
    Current value (from the default) = false
      From //third_party/ffmpeg/ffmpeg_options.gni:41

    Set true to build ffmpeg as a shared library. NOTE: this means we should
    always consult is_component_ffmpeg instead of is_component_build for
    ffmpeg targets. This helps linux chromium packagers that swap out our
    ffmpeg.so with their own. See discussion here
    https://groups.google.com/a/chromium.org/forum/#!msg/chromium-packagers/R5rcZXWxBEQ/B6k0zzmJbvcJ

is_debug
    Current value = false
      From //out/Default/args.gn:3
    Overridden from the default = true
      From //build/config/BUILDCONFIG.gn:159

    Debug build. Enabling official builds automatically sets is_debug to false.

is_desktop_linux
    Current value (from the default) = false
      From //build/config/BUILDCONFIG.gn:134

    Whether we're a traditional desktop unix.

is_java_debug
    Current value (from the default) = false
      From //build/config/android/config.gni:141

    Java debug on Android. Having this on enables multidexing, and turning it
    off will enable proguard.

is_lsan
    Current value (from the default) = false
      From //build/config/sanitizers/sanitizers.gni:14

    Compile for Leak Sanitizer to find leaks.

is_msan
    Current value (from the default) = false
      From //build/config/sanitizers/sanitizers.gni:17

    Compile for Memory Sanitizer to find uninitialized reads.

is_multi_dll_chrome
    Current value (from the default) = false
      From //build/config/chrome_build.gni:13

    Break chrome.dll into multple pieces based on process type. Only available
    on Windows.

is_nacl_glibc
    Current value (from the default) = false
      From //build/config/nacl/config.gni:9

    Native Client supports both Newlib and Glibc C libraries where Newlib
    is assumed to be the default one; use this to determine whether Glibc
    is being used instead.

is_official_build
    Current value (from the default) = false
      From //build/config/BUILDCONFIG.gn:131

    Set to enable the official build level of optimization. This has nothing
    to do with branding, but enables an additional level of optimization above
    release (!is_debug). This might be better expressed as a tri-state
    (debug, release, official) but for historical reasons there are two
    separate flags.

is_proto_quic
    Current value (from the default) = false
      From //net/features.gni:9

    If true, prune things down as needed for proto-quic build.

is_syzyasan
    Current value (from the default) = false
      From //build/config/sanitizers/sanitizers.gni:52

    Enable building with SyzyAsan which can find certain types of memory
    errors. Only works on Windows. See
    https://github.com/google/syzygy/wiki/SyzyASanHowTo

is_tsan
    Current value (from the default) = false
      From //build/config/sanitizers/sanitizers.gni:20

    Compile for Thread Sanitizer to find threading bugs.

is_ubsan
    Current value (from the default) = false
      From //build/config/sanitizers/sanitizers.gni:24

    Compile for Undefined Behaviour Sanitizer to find various types of
    undefined behaviour (excludes vptr checks).

is_ubsan_no_recover
    Current value (from the default) = false
      From //build/config/sanitizers/sanitizers.gni:27

    Halt the program if a problem is detected.

is_ubsan_null
    Current value (from the default) = false
      From //build/config/sanitizers/sanitizers.gni:30

    Compile for Undefined Behaviour Sanitizer's null pointer checks.

is_ubsan_security
    Current value (from the default) = false
      From //build/config/sanitizers/sanitizers.gni:87

    Enables core ubsan security features. Will later be removed once it matches
    is_ubsan.

is_ubsan_vptr
    Current value (from the default) = false
      From //build/config/sanitizers/sanitizers.gni:33

    Compile for Undefined Behaviour Sanitizer's vptr checks.

is_unsafe_developer_build
    Current value (from the default) = true
      From //base/BUILD.gn:52

    Unsafe developer build. Has developer-friendly features that may weaken or
    disable security measures like sandboxing or ASLR.
    IMPORTANT: Unsafe developer builds should never be distributed to end users.

is_win_fastlink
    Current value (from the default) = false
      From //build/config/compiler/compiler.gni:51

    Tell VS to create a PDB that references information in .obj files rather
    than copying it all. This should improve linker performance. mspdbcmf.exe
    can be used to convert a fastlink pdb to a normal one.

jumbo_build_excluded
    Current value (from the default) = []
      From //build/config/jumbo.gni:14

    A list of targets to exclude from jumbo builds, for optimal round trip time
    when frequently changing a set of cpp files.

jumbo_file_merge_limit
    Current value (from the default) = 50
      From //build/config/jumbo.gni:29

    How many files to group at most. Smaller numbers give more
    parallellism, higher numbers give less total CPU usage. Higher
    numbers also give longer single-file recompilation times.
   
    Recommendations:
    Higher numbers than 100 does not reduce wall clock compile times
    even for 4 cores or less so no reason to go higher than 100.
    Going from 50 to 100 with a 4 core CPU saves about 3% CPU time and
    3% wall clock time in a tree with blink, v8 and content
    jumbofied. At the same time it increases the compile time for the
    largest jumbo chunks by 10-20% and reduces the chance to use all
    available CPU cores. So set the default to 50 to balance between
    high and low-core build performance.

libcpp_is_static
    Current value (from the default) = true
      From //build/config/c++/c++.gni:33

    ASan, MSan and TSan builds need to override operator new, operator delete,
    and some exception handling symbols, so libc++ must be a shared library to
    prevent duplicate symbol errors when linking.
    Additionally, -fsanitize=vptr requires libc++ to be a shared library
    because the ubsan runtime library that implements -fsanitize=vptr calls
    dynamic_cast with the ABI type info classes, which won't return the right
    answer if each DSO has its own copy of the ABI classes.

libyuv_disable_jpeg
    Current value (from the default) = false
      From //third_party/libyuv/libyuv.gni:15

libyuv_include_tests
    Current value (from the default) = false
      From //third_party/libyuv/libyuv.gni:14

libyuv_use_gflags
    Current value (from the default) = true
      From //third_party/libyuv/BUILD.gn:14

    Set to false to disable building with gflags.

libyuv_use_msa
    Current value (from the default) = false
      From //third_party/libyuv/libyuv.gni:18

libyuv_use_neon
    Current value (from the default) = true
      From //third_party/libyuv/libyuv.gni:16

link_pulseaudio
    Current value (from the default) = false
      From //media/media_options.gni:37

    Allows distributions to link pulseaudio directly (DT_NEEDED) instead of
    using dlopen. This helps with automated detection of ABI mismatches and
    prevents silent errors.

linkrepro_root_dir
    Current value (from the default) = ""
      From //build/config/compiler/compiler.gni:69

    Root directory that will store the MSVC link repro. This should only be
    used for debugging purposes on the builders where a MSVC linker flakyness
    has been observed. The targets for which a link repro should be generated
    should add somethink like this to their configuration:
      if (linkrepro_root_dir != "") {
        ldflags = ["/LINKREPRO:" + linkrepro_root_dir + "/" + target_name]
      }
   
    Note that doing a link repro uses a lot of disk space and slows down the
    build, so this shouldn't be enabled on too many targets.
   
    See crbug.com/669854.

lint_android_sdk_root
    Current value (from the default) = "//third_party/android_tools/sdk"
      From //build/config/android/config.gni:115

lint_android_sdk_version
    Current value (from the default) = "26"
      From //build/config/android/config.gni:116

linux_use_bundled_binutils
    Current value (from the default) = true
      From //build/config/compiler/BUILD.gn:51

llvm_force_head_revision
    Current value (from the default) = false
      From //build/toolchain/toolchain.gni:18

    If this is set to true, or if LLVM_FORCE_HEAD_REVISION is set to 1
    in the environment, we use the revision in the llvm repo to determine
    the CLANG_REVISION to use, instead of the version hard-coded into
    //tools/clang/scripts/update.py. This should only be used in
    conjunction with setting LLVM_FORCE_HEAD_REVISION in the
    environment when `gclient runhooks` is run as well.

mac_sdk_min
    Current value (from the default) = "10.12"
      From //build/config/mac/mac_sdk_overrides.gni:12

mac_views_browser
    Current value (from the default) = false
      From //ui/base/ui_features.gni:12

    Whether the entire browser uses toolkit-views on Mac instead of Cocoa.

media_use_ffmpeg
    Current value (from the default) = true
      From //media/media_options.gni:42

    Enable usage of FFmpeg within the media library. Used for most software
    based decoding, demuxing, and sometimes optimized FFTs. If disabled,
    implementors must provide their own demuxers and decoders.

media_use_libvpx
    Current value (from the default) = true
      From //media/media_options.gni:46

    Enable usage of libvpx within the media library. Used for software based
    decoding of VP9 and VP8A type content.

mojo_media_host
    Current value (from the default) = "gpu"
      From //media/media_options.gni:228

mojo_media_services
    Current value (from the default) = ["cdm", "audio_decoder"]
      From //media/media_options.gni:221

    Both chrome for Android and cast for ATV belongs to this case

msan_track_origins
    Current value (from the default) = 2
      From //build/config/sanitizers/sanitizers.gni:38

    Track where uninitialized memory originates from. From fastest to slowest:
    0 - no tracking, 1 - track only the initial allocation site, 2 - track the
    chain of stores leading from allocation site to use site.

msvc_use_absolute_paths
    Current value (from the default) = false
      From //build/toolchain/toolchain.gni:32

    Use absolute file paths in the compiler diagnostics and __FILE__ macro
    if needed.

multidex_in_release
    Current value (from the default) = false
      From //chrome/android/chrome_public_apk_tmpl.gni:17

    Enable multidex in release builds.

openmax_big_float_fft
    Current value (from the default) = true
      From //third_party/openmax_dl/dl/BUILD.gn:10

    Override this value to build with small float FFT tables

optimize_for_fuzzing
    Current value (from the default) = false
      From //build/config/compiler/BUILD.gn:92

    Optimize for coverage guided fuzzing (balance between speed and number of
    branches)

optimize_webui
    Current value (from the default) = true
      From //chrome/common/features.gni:65

    Optimize parts of Chrome's UI written with web technologies (HTML/CSS/JS)
    for runtime performance purposes. This does more work at compile time for
    speed benefits at runtime (so we skip in debug builds).

override_build_date
    Current value (from the default) = "N/A"
      From //base/BUILD.gn:39

    Override this value to give a specific build date.
    See //base/build_time.cc and //build/write_build_date_header.py for more
    details and the expected format.

ozone_auto_platforms
    Current value (from the default) = false
      From //ui/ozone/ozone.gni:10

    Select platforms automatically. Turn this off for manual control.

ozone_platform
    Current value (from the default) = ""
      From //ui/ozone/ozone.gni:16

    The platform that will used at runtime by default. This can be overridden
    with the command line flag --ozone-platform=<platform>.

ozone_platform_cast
    Current value (from the default) = false
      From //ui/ozone/ozone.gni:19

    Compile the 'cast' platform.

ozone_platform_gbm
    Current value (from the default) = false
      From //ui/ozone/ozone.gni:22

    Compile the 'gbm' platform.

ozone_platform_headless
    Current value (from the default) = false
      From //ui/ozone/ozone.gni:25

    Compile the 'headless' platform.

ozone_platform_wayland
    Current value (from the default) = false
      From //ui/ozone/ozone.gni:31

    Compile the 'wayland' platform.

ozone_platform_x11
    Current value (from the default) = false
      From //ui/ozone/ozone.gni:28

    Compile the 'x11' platform.

pdf_bundle_freetype
    Current value (from the default) = false
      From //third_party/pdfium/pdfium.gni:16

    Build PDFium either:
    1) When set to true, with a bundled FreeType, built from FreeType source
       code in //third_party/freetype and PDFium's FreeType configs in
       third_party/freetype/include.
    2) When set to false, use whatever FreeType target is defined in
       //build/config/freetype.

pdf_enable_v8
    Current value (from the default) = true
      From //third_party/pdfium/pdfium.gni:19

    Build PDFium either with or without v8 support.

pdf_enable_xfa
    Current value (from the default) = false
      From //third_party/pdfium/pdfium.gni:22

    Build PDFium either with or without XFA Forms support.

pdf_enable_xfa_bmp
    Current value (from the default) = true
      From //third_party/pdfium/pdfium.gni:25

    If XFA, also support bmp codec. Ignored if not XFA.

pdf_enable_xfa_gif
    Current value (from the default) = true
      From //third_party/pdfium/pdfium.gni:28

    If XFA, also support gif codec. Ignored if not XFA.

pdf_enable_xfa_png
    Current value (from the default) = true
      From //third_party/pdfium/pdfium.gni:31

    If XFA, also support png codec. Ignored if not XFA.

pdf_enable_xfa_tiff
    Current value (from the default) = true
      From //third_party/pdfium/pdfium.gni:34

    If XFA, also support png codec. Ignored if not XFA.

pdf_is_complete_lib
    Current value (from the default) = false
      From //third_party/pdfium/pdfium.gni:51

    Build a complete static library

pdf_is_standalone
    Current value (from the default) = false
      From //third_party/pdfium/pdfium.gni:48

    Build PDFium standalone

pdf_use_skia
    Current value (from the default) = false
      From //third_party/pdfium/pdfium.gni:38

    Build PDFium against skia (experimental) rather than agg. Use Skia to draw
    everything.

pdf_use_skia_paths
    Current value (from the default) = false
      From //third_party/pdfium/pdfium.gni:42

    Build PDFium against skia (experimental) rather than agg. Use Skia to draw
    paths.

pdf_use_win32_gdi
    Current value (from the default) = true
      From //third_party/pdfium/pdfium.gni:45

    Build PDFium with or without experimental win32 GDI APIs.

pgo_build
    Current value (from the default) = false
      From //chrome/common/features.gni:60

    Indicates if the build is using PGO.

pgo_data_path
    Current value (from the default) = ""
      From //build/config/compiler/pgo/pgo.gni:16

    When using chrome_pgo_phase = 2, read profile data from this path.

pkg_config
    Current value (from the default) = ""
      From //build/config/linux/pkg_config.gni:33

    A pkg-config wrapper to call instead of trying to find and call the right
    pkg-config directly. Wrappers like this are common in cross-compilation
    environments.
    Leaving it blank defaults to searching PATH for 'pkg-config' and relying on
    the sysroot mechanism to find the right .pc files.

proguard_verbose
    Current value (from the default) = false
      From //build/config/android/config.gni:137

    Enables verbose proguard output (summaries and unfiltered output).

proprietary_codecs
    Current value (from the default) = false
      From //build/config/features.gni:29

    Enables proprietary codecs and demuxers; e.g. H264, AAC, MP3, and MP4.
    We always build Google Chrome and Chromecast with proprietary codecs.
   
    Note: this flag is used by WebRTC which is DEPSed into Chrome. Moving it
    out of //build will require using the build_overrides directory.

remove_webcore_debug_symbols
    Current value (from the default) = false
      From //third_party/WebKit/Source/config.gni:19

    If true, doesn't compile debug symbols into webcore reducing the
    size of the binary and increasing the speed of gdb.

report_java_assert
    Current value (from the default) = false
      From //build/config/android/config.gni:145

    Report Java assert failure on Android. Turning it on will report Java
    assert failure without crash.

root_extra_deps
    Current value (from the default) = []
      From //BUILD.gn:36

    A list of extra dependencies to add to the root target. This allows a
    checkout to add additional targets without explicitly changing any checked-
    in files.

rtc_audio_device_plays_sinus_tone
    Current value (from the default) = false
      From //third_party/webrtc/webrtc.gni:157

    When set to true, replace the audio output with a sinus tone at 440Hz.
    The ADM will ask for audio data from WebRTC but instead of reading real
    audio samples from NetEQ, a sinus tone will be generated and replace the
    real audio samples.

rtc_build_json
    Current value (from the default) = true
      From //third_party/webrtc/webrtc.gni:81

    Disable these to not build components which can be externally provided.

rtc_build_libevent
    Current value (from the default) = true
      From //third_party/webrtc/webrtc.gni:121

rtc_build_libsrtp
    Current value (from the default) = true
      From //third_party/webrtc/webrtc.gni:82

rtc_build_libvpx
    Current value (from the default) = true
      From //third_party/webrtc/webrtc.gni:83

rtc_build_libyuv
    Current value (from the default) = true
      From //third_party/webrtc/webrtc.gni:85

rtc_build_openmax_dl
    Current value (from the default) = true
      From //third_party/webrtc/webrtc.gni:86

rtc_build_opus
    Current value (from the default) = true
      From //third_party/webrtc/webrtc.gni:87

rtc_build_ssl
    Current value (from the default) = true
      From //third_party/webrtc/webrtc.gni:88

rtc_build_usrsctp
    Current value (from the default) = true
      From //third_party/webrtc/webrtc.gni:89

rtc_build_with_neon
    Current value (from the default) = true
      From //third_party/webrtc/webrtc.gni:137

rtc_enable_android_opensl
    Current value (from the default) = false
      From //third_party/webrtc/webrtc.gni:94

rtc_enable_bwe_test_logging
    Current value (from the default) = false
      From //third_party/webrtc/webrtc.gni:75

    Set this to true to enable BWE test logging.

rtc_enable_external_auth
    Current value (from the default) = true
      From //third_party/webrtc/webrtc.gni:68

    Enable when an external authentication mechanism is used for performing
    packet authentication for RTP packets instead of libsrtp.

rtc_enable_intelligibility_enhancer
    Current value (from the default) = false
      From //third_party/webrtc/webrtc.gni:64

    Disable the code for the intelligibility enhancer by default.

rtc_enable_libevent
    Current value (from the default) = true
      From //third_party/webrtc/webrtc.gni:120

rtc_enable_protobuf
    Current value (from the default) = true
      From //third_party/webrtc/webrtc.gni:61

    Enables the use of protocol buffers for debug recordings.

rtc_enable_sctp
    Current value (from the default) = true
      From //third_party/webrtc/webrtc.gni:78

    Set this to disable building with support for SCTP data channels.

rtc_include_ilbc
    Current value = false
      From //.gn:64
    Overridden from the default = true
      From //third_party/webrtc/webrtc.gni:37

    Include the iLBC audio codec?

rtc_include_internal_audio_device
    Current value (from the default) = false
      From //third_party/webrtc/webrtc.gni:186

    Chromium uses its own IO handling, so the internal ADM is only built for
    standalone WebRTC.

rtc_include_opus
    Current value (from the default) = true
      From //third_party/webrtc/webrtc.gni:40

    Disable this to avoid building the Opus audio codec.

rtc_include_pulse_audio
    Current value (from the default) = false
      From //third_party/webrtc/webrtc.gni:182

    Excluded in Chromium since its prerequisites don't require Pulse Audio.

rtc_include_tests
    Current value (from the default) = false
      From //third_party/webrtc/webrtc.gni:189

    Include tests in standalone checkout.

rtc_initialize_ffmpeg
    Current value (from the default) = false
      From //third_party/webrtc/webrtc.gni:168

    FFmpeg must be initialized for |H264DecoderImpl| to work. This can be done
    by WebRTC during |H264DecoderImpl::InitDecode| or externally. FFmpeg must
    only be initialized once. Projects that initialize FFmpeg externally, such
    as Chromium, must turn this flag off so that WebRTC does not also
    initialize.

rtc_jsoncpp_root
    Current value (from the default) = "//third_party/jsoncpp/source/include"
      From //third_party/webrtc/webrtc.gni:51

    Used to specify an external Jsoncpp include path when not compiling the
    library that comes with WebRTC (i.e. rtc_build_json == 0).

rtc_libvpx_build_vp9
    Current value (from the default) = true
      From //third_party/webrtc/webrtc.gni:84

rtc_link_task_queue_impl
    Current value = false
      From //.gn:59
    Overridden from the default = true
      From //third_party/webrtc/webrtc.gni:111

    Links a default implementation of task queues to targets
    that depend on the target rtc_task_queue. Set to false to
    use an external implementation.

rtc_opus_support_120ms_ptime
    Current value (from the default) = true
      From //third_party/webrtc/webrtc.gni:44

    Enable this if the Opus version upon which WebRTC is built supports direct
    encoding of 120 ms packets.

rtc_opus_variable_complexity
    Current value (from the default) = false
      From //third_party/webrtc/webrtc.gni:47

    Enable this to let the Opus audio codec change complexity on the fly.

rtc_prefer_fixed_point
    Current value (from the default) = true
      From //third_party/webrtc/webrtc.gni:125

rtc_restrict_logging
    Current value (from the default) = true
      From //third_party/webrtc/webrtc.gni:179

rtc_sanitize_coverage
    Current value (from the default) = ""
      From //third_party/webrtc/webrtc.gni:106

    Set to "func", "block", "edge" for coverage generation.
    At unit test runtime set UBSAN_OPTIONS="coverage=1".
    It is recommend to set include_examples=0.
    Use llvm's sancov -html-report for human readable reports.
    See http://clang.llvm.org/docs/SanitizerCoverage.html .

rtc_ssl_root
    Current value (from the default) = ""
      From //third_party/webrtc/webrtc.gni:55

    Used to specify an external OpenSSL include path when not compiling the
    library that comes with WebRTC (i.e. rtc_build_ssl == 0).

rtc_use_dummy_audio_file_devices
    Current value (from the default) = false
      From //third_party/webrtc/webrtc.gni:151

    By default, use normal platform audio support or dummy audio, but don't
    use file-based audio playout and record.

rtc_use_gtk
    Current value (from the default) = false
      From //third_party/webrtc/webrtc.gni:172

    Build sources requiring GTK. NOTICE: This is not present in Chrome OS
    build environments, even if available for Chromium builds.

rtc_use_h264
    Current value (from the default) = false
      From //third_party/webrtc/webrtc.gni:147

    Enable this to build OpenH264 encoder/FFmpeg decoder. This is supported on
    all platforms except Android and iOS. Because FFmpeg can be built
    with/without H.264 support, |ffmpeg_branding| has to separately be set to a
    value that includes H.264, for example "Chrome". If FFmpeg is built without
    H.264, compilation succeeds but |H264DecoderImpl| fails to initialize. See
    also: |rtc_initialize_ffmpeg|.
    CHECK THE OPENH264, FFMPEG AND H.264 LICENSES/PATENTS BEFORE BUILDING.
    http://www.openh264.org, https://www.ffmpeg.org/

rtc_use_lto
    Current value (from the default) = false
      From //third_party/webrtc/webrtc.gni:99

    Link-Time Optimizations.
    Executes code generation at link-time instead of compile-time.
    https://gcc.gnu.org/wiki/LinkTimeOptimization

rtc_use_memcheck
    Current value (from the default) = false
      From //third_party/webrtc/webrtc.gni:161

    When set to true, test targets will declare the files needed to run memcheck
    as data dependencies. This is to enable memcheck execution on swarming bots.

rtc_use_openmax_dl
    Current value (from the default) = true
      From //third_party/webrtc/webrtc.gni:130

runtime_call_stats_count_everything
    Current value (from the default) = false
      From //third_party/WebKit/Source/platform/BUILD.gn:184

safe_browsing_mode
    Current value (from the default) = 1
      From //build/config/features.gni:40

sanitizer_coverage_flags
    Current value (from the default) = ""
      From //build/config/sanitizers/sanitizers.gni:103

    Value for -fsanitize-coverage flag. Setting this causes
    use_sanitizer_coverage to be enabled.
    Default value when unset and use_afl=true or use_libfuzzer=true:
        trace-pc-guard
    Default value when unset and use_sanitizer_coverage=true:
        trace-pc-guard,indirect-calls

sanitizer_keep_symbols
    Current value (from the default) = false
      From //build/config/sanitizers/sanitizers.gni:109

    Keep symbol level when building with sanitizers. When sanitizers are
    enabled, the default is to compile with the minimum debug info level
    necessary, overriding any other symbol level arguments that may be set.
    Setting this to true prevents this.

skia_whitelist_serialized_typefaces
    Current value (from the default) = false
      From //skia/BUILD.gn:24

strip_absolute_paths_from_debug_symbols
    Current value (from the default) = false
      From //build/config/compiler/BUILD.gn:97

    Optimize symbol files for maximizing goma cache hit rate. This isn't
    on by default when goma is enabled because setting this to true may make
    it harder to debug binaries.

strip_debug_info
    Current value (from the default) = false
      From //build/config/compiler/BUILD.gn:103

    Strip the debug info of symbols file in lib.unstripped to reduce size.

symbol_level
    Current value = 1
      From //out/Default/args.gn:7
    Overridden from the default = -1
      From //build/config/compiler/compiler.gni:26

    How many symbols to include in the build. This affects the performance of
    the build since the symbols are large and dealing with them is slow.
      2 means regular build with symbols.
      1 means minimal symbols, usually enough for backtraces only. Symbols with
    internal linkage (static functions or those in anonymous namespaces) may not
    appear when using this level.
      0 means no symbols.
      -1 means auto-set according to debug/release and platform.

system_libdir
    Current value (from the default) = "lib"
      From //build/config/linux/pkg_config.gni:47

    CrOS systemroots place pkgconfig files at <systemroot>/usr/share/pkgconfig
    and one of <systemroot>/usr/lib/pkgconfig or <systemroot>/usr/lib64/pkgconfig
    depending on whether the systemroot is for a 32 or 64 bit architecture.
   
    When build under GYP, CrOS board builds specify the 'system_libdir' variable
    as part of the GYP_DEFINES provided by the CrOS emerge build or simple
    chrome build scheme. This variable permits controlling this for GN builds
    in similar fashion by setting the `system_libdir` variable in the build's
    args.gn file to 'lib' or 'lib64' as appropriate for the target architecture.

system_webview_package_name
    Current value (from the default) = "com.android.webview"
      From //android_webview/BUILD.gn:16

    Package name of the system_webview_apk target.

target_cpu
    Current value = "arm"
      From //out/Default/args.gn:2
    Overridden from the default = ""
      (Internally set; try `gn help target_cpu`.)

target_os
    Current value = "android"
      From //out/Default/args.gn:1
    Overridden from the default = ""
      (Internally set; try `gn help target_os`.)

target_sysroot
    Current value (from the default) = ""
      From //build/config/sysroot.gni:13

    The absolute path of the sysroot that is applied when compiling using
    the target toolchain.

target_sysroot_dir
    Current value (from the default) = "//build/linux"
      From //build/config/sysroot.gni:16

    The absolute path to directory containing linux sysroot images

toolkit_views
    Current value (from the default) = true
      From //build/config/ui.gni:38

    True means the UI is built using the "views" framework.

treat_warnings_as_errors
    Current value (from the default) = true
      From //build/config/compiler/BUILD.gn:40

    Default to warnings as errors for default workflow, where we catch
    warnings with known toolchains. Allow overriding this e.g. for Chromium
    builds on Linux that could use a different version of the compiler.
    With GCC, warnings in no-Chromium code are always not treated as errors.

update_android_aar_prebuilts
    Current value (from the default) = false
      From //build/config/android/config.gni:176

    When true, updates all android_aar_prebuilt() .info files during gn gen.
    Refer to android_aar_prebuilt() for more details.

use_afl
    Current value (from the default) = false
      From //build/config/sanitizers/sanitizers.gni:83

    Compile for fuzzing with AFL.

use_allocator
    Current value (from the default) = "tcmalloc"
      From //build/config/allocator.gni:29

    Memory allocator to use. Set to "none" to use default allocator.

use_allocator_shim
    Current value (from the default) = true
      From //build/config/allocator.gni:32

    Causes all the allocations to be routed via allocator_shim.cc.

use_alsa
    Current value (from the default) = false
      From //media/media_options.gni:110

    Enables runtime selection of ALSA library for audio.

use_aura
    Current value (from the default) = true
      From //build/config/ui.gni:30

    Indicates if Aura is enabled. Aura is a low-level windowing library, sort
    of a replacement for GDI or GTK.

use_base_test_suite
    Current value (from the default) = false
      From //sandbox/linux/BUILD.gn:20

    On Android, use plain GTest.

use_cfi_cast
    Current value (from the default) = false
      From //build/config/sanitizers/sanitizers.gni:64

    Enable checks for bad casts: derived cast and unrelated cast.
    TODO(krasin): remove this, when we're ready to add these checks by default.
    https://crbug.com/626794

use_cfi_diag
    Current value (from the default) = false
      From //build/config/sanitizers/sanitizers.gni:72

    Print detailed diagnostics when Control Flow Integrity detects a violation.

use_cfi_icall
    Current value (from the default) = false
      From //build/config/sanitizers/sanitizers.gni:69

    Enable checks for indirect function calls via a function pointer.
    TODO(pcc): remove this when we're ready to add these checks by default.
    https://crbug.com/701919

use_cfi_recover
    Current value (from the default) = false
      From //build/config/sanitizers/sanitizers.gni:76

    Let Control Flow Integrity continue execution instead of crashing when
    printing diagnostics (use_cfi_diag = true).

use_clang_coverage
    Current value (from the default) = false
      From //build/config/coverage/coverage.gni:13

    Enable Clang's Source-based Code Coverage. This should not be used with
    is_component_build=true.
    TODO(metzman): Add an assertion that will prevent is_component_build=true
    from being passed as an argument to gn, but will not force toolchains that
    set is_component_build=true to set it to false.

use_clang_static_analyzer
    Current value (from the default) = false
      From //build/toolchain/clang_static_analyzer.gni:10

    Uses the Clang static analysis tools during compilation.

use_coverage
    Current value (from the default) = false
      From //third_party/pdfium/pdfium.gni:57

    Enable coverage information

use_cras
    Current value (from the default) = false
      From //media/media_options.gni:55

    Override to dynamically link the cras (ChromeOS audio) library.

use_cups
    Current value (from the default) = false
      From //printing/features/features.gni:16

use_custom_libcxx
    Current value (from the default) = true
      From //build/config/c++/c++.gni:14

use_custom_libcxx_for_host
    Current value (from the default) = false
      From //build/config/c++/c++.gni:24

    Use libc++ instead of stdlibc++ when using the host_cpu toolchain, even if
    use_custom_libcxx is false. This is useful for cross-compiles where a custom
    toolchain for the target_cpu has been set as the default toolchain, but
    use_custom_libcxx should still be true when building for the host.  The
    expected usage is to set use_custom_libcxx=false and
    use_custom_libcxx_for_host=true in the passed in buildargs.

use_cxx11
    Current value (from the default) = false
      From //build/config/compiler/BUILD.gn:100

    Allow projects that wish to stay on C++11 to override Chromium's default.

use_cxx11_on_android
    Current value (from the default) = false
      From //build/config/compiler/BUILD.gn:108

    C++11 may not be an option if Android test infrastructure is used.

use_dbus
    Current value (from the default) = true
      From //build/config/features.gni:51

use_debug_fission
    Current value (from the default) = "default"
      From //build/config/compiler/compiler.gni:42

    use_debug_fission: whether to use split DWARF debug info
    files. This can reduce link time significantly, but is incompatible
    with some utilities such as icecc and ccache. Requires gold and
    gcc >= 4.8 or clang.
    http://gcc.gnu.org/wiki/DebugFission
   
    This is a placeholder value indicating that the code below should set
    the default.  This is necessary to delay the evaluation of the default
    value expression until after its input values such as use_gold have
    been set, e.g. by a toolchain_args() block.

use_drfuzz
    Current value (from the default) = false
      From //build/config/sanitizers/sanitizers.gni:91

    Compile for fuzzing with Dr. Fuzz
    See http://www.chromium.org/developers/testing/dr-fuzz

use_errorprone_java_compiler
    Current value (from the default) = true
      From //build/config/android/config.gni:151

    Set to false to disable the Errorprone compiler

use_external_popup_menu
    Current value (from the default) = true
      From //content/common/features.gni:9

    Whether or not to use external popup menu.

use_gcm_from_platform
    Current value (from the default) = true
      From //components/gcm_driver/config.gni:8

    Use native GCM driver for all non-Android builds. On Android, the platform
    includes GMS which provides the GCM client.

use_gconf
    Current value (from the default) = false
      From //build/config/features.gni:55

    Option controlling the use of GConf (the classic GNOME configuration
    system).

use_gio
    Current value (from the default) = true
      From //build/config/features.gni:58

use_glib
    Current value (from the default) = true
      From //build/config/ui.gni:33

    Whether we should use glib, a low level C utility library.

use_gnome_keyring
    Current value (from the default) = false
      From //components/os_crypt/features.gni:10

    Whether to use libgnome-keyring (deprecated by libsecret).
    See http://crbug.com/466975 and http://crbug.com/355223.

use_gold
    Current value (from the default) = true
      From //build/config/compiler/compiler.gni:167

use_goma
    Current value (from the default) = false
      From //build/toolchain/goma.gni:9

    Set to true to enable distributed compilation using Goma.

use_gtk3
    Current value (from the default) = true
      From //build/config/linux/gtk/gtk.gni:11

    Whether to compile against GTKv3 instead of GTKv2.

use_incremental_wpo
    Current value (from the default) = false
      From //build/config/compiler/compiler.gni:55

    Whether or not we should turn on incremental WPO. Only affects the VS
    Windows build.

use_jumbo_build
    Current value (from the default) = false
      From //build/config/jumbo.gni:10

    If true, use a jumbo build (files compiled together) to speed up
    compilation.

use_kerberos
    Current value (from the default) = true
      From //net/features.gni:24

    Enable Kerberos authentication. It is disabled by default on iOS, Fuchsia
    and Chromecast, at least for now. This feature needs configuration
    (krb5.conf and so on). On Chrome OS it is only supported on Active
    Directory managed devices.
    TODO(fuchsia): Enable kerberos on Fuchsia when it's implemented there.

use_libfuzzer
    Current value (from the default) = false
      From //build/config/sanitizers/sanitizers.gni:80

    Compile for fuzzing with LLVM LibFuzzer.
    See http://www.chromium.org/developers/testing/libfuzzer

use_libjpeg_turbo
    Current value (from the default) = true
      From //third_party/BUILD.gn:16

    Uses libjpeg_turbo as the jpeg implementation. Has no effect if
    use_system_libjpeg is set.

use_libpci
    Current value (from the default) = false
      From //third_party/angle/BUILD.gn:14

    Use the PCI lib to collect GPU information on Linux.

use_lightweight_order_profiling
    Current value (from the default) = false
      From //build/config/android/abi.gni:18

    Use a lightweight variant of order profiling. Does nothing without
    use_order_profiling set above. Will either replace use_order_profiling
    or be removed.

use_lld
    Current value (from the default) = false
      From //build/config/compiler/compiler.gni:158

    Set to true to use lld, the LLVM linker. This flag may be used on Windows,
    Linux or Fuchsia.
    TODO(pcc): Enable lld on more architectures on Linux. E.g. we probably need
    to fix some of crbug.com/742655 to enable it on ARM.
    TODO(pcc): Remove !is_msan once crbug.com/772559 is fixed.

use_locally_built_instrumented_libraries
    Current value (from the default) = false
      From //build/config/sanitizers/sanitizers.gni:47

    Use dynamic libraries instrumented by one of the sanitizers instead of the
    standard system libraries. Set this flag to build the libraries from source.

use_low_memory_buffer
    Current value (from the default) = false
      From //media/media_options.gni:58

    Use low-memory buffers on cast builds.

use_low_quality_image_interpolation
    Current value (from the default) = false
      From //third_party/WebKit/Source/config.gni:22

    If true, defaults image interpolation to low quality.

use_official_google_api_keys
    Current value (from the default) = ""
      From //google_apis/BUILD.gn:31

    You can set the variable 'use_official_google_api_keys' to true
    to use the Google-internal file containing official API keys
    for Google Chrome even in a developer build.  Setting this
    variable explicitly to true will cause your build to fail if the
    internal file is missing.
   
    The variable is documented here, but not handled in this file;
    see //google_apis/determine_use_official_keys.gypi for the
    implementation.
   
    Set the variable to false to not use the internal file, even when
    it exists in your checkout.
   
    Leave it unset or set to "" to have the variable
    implicitly set to true if you have
    src/google_apis/internal/google_chrome_api_keys.h in your
    checkout, and implicitly set to false if not.
   
    Note that official builds always behave as if the variable
    was explicitly set to true, i.e. they always use official keys,
    and will fail to build if the internal file is missing.

use_openh264
    Current value (from the default) = false
      From //third_party/openh264/openh264_args.gni:11

    Enable this to build OpenH264 (for encoding, not decoding).
    CHECK THE OPENH264 LICENSE/PATENT BEFORE BUILDING, see
    http://www.openh264.org/.

use_order_profiling
    Current value (from the default) = false
      From //build/config/android/abi.gni:13

    Adds intrumentation to each function. Writes a file with the order that
    functions are called at startup.

use_ozone
    Current value (from the default) = false
      From //build/config/ui.gni:26

    Indicates if Ozone is enabled. Ozone is a low-level library layer for Linux
    that does not require X11. Enabling this feature disables use of glib, x11,
    Pango, and Cairo.

use_partition_alloc
    Current value (from the default) = true
      From //base/BUILD.gn:42

    Partition alloc is included by default except iOS.

use_pic
    Current value (from the default) = true
      From //build/config/compiler/compiler.gni:72

    Whether or not we should use position independent code.

use_platform_icu_alternatives
    Current value = true
      From //out/Default/args.gn:15
    Overridden from the default = false
      From //url/features.gni:10

    Enables the use of ICU alternatives in lieu of ICU. The flag is used
    for Cronet to reduce the size of the Cronet binary.

use_prebuilt_instrumented_libraries
    Current value (from the default) = false
      From //build/config/sanitizers/sanitizers.gni:43

    Use dynamic libraries instrumented by one of the sanitizers instead of the
    standard system libraries. Set this flag to download prebuilt binaries from
    GCS.

use_pulseaudio
    Current value (from the default) = false
      From //media/media_options.gni:107

    Enables runtime selection of PulseAudio library.

use_rtti
    Current value (from the default) = false
      From //build/config/compiler/BUILD.gn:82

    Build with C++ RTTI enabled. Chromium builds without RTTI by default,
    but some sanitizers are known to require it, like CFI diagnostics
    and UBsan variants.

use_sanitizer_coverage
    Current value (from the default) = false
      From //build/config/sanitizers/sanitizers.gni:143

use_sysroot
    Current value (from the default) = true
      From //build/config/sysroot.gni:19

use_system_freetype
    Current value (from the default) = false
      From //build/config/freetype/freetype.gni:13

    Blink needs a recent and properly build-configured FreeType version to
    support OpenType variations, color emoji and avoid security bugs. By default
    we ship and link such a version as part of Chrome. For distributions that
    prefer to keep linking to the version the system, FreeType must be newer
    than version 2.7.1 and have color bitmap support compiled in. WARNING:
    System FreeType configurations other than as described WILL INTRODUCE TEXT
    RENDERING AND SECURITY REGRESSIONS.

use_system_harfbuzz
    Current value (from the default) = false
      From //third_party/harfbuzz-ng/harfbuzz.gni:11

    Blink uses a cutting-edge version of Harfbuzz; most Linux distros do not
    contain a new enough version of the code to work correctly. However,
    ChromeOS chroots (i.e, real ChromeOS builds for devices) do contain a
    new enough version of the library, and so this variable exists so that
    ChromeOS can build against the system lib and keep binary sizes smaller.

use_system_lcms2
    Current value (from the default) = false
      From //third_party/pdfium/pdfium.gni:63

    Don't build against bundled lcms2.

use_system_libjpeg
    Current value (from the default) = false
      From //third_party/BUILD.gn:12

    Uses system libjpeg. If true, overrides use_libjpeg_turbo.

use_system_libpng
    Current value (from the default) = false
      From //third_party/pdfium/pdfium.gni:66

    Don't build against bundled libpng.

use_system_sqlite
    Current value (from the default) = false
      From //third_party/sqlite/BUILD.gn:11

    Controls whether the build should uses the version of sqlite3 library
    shipped with the system (currently only supported on iOS) or the one
    shipped with Chromium source.

use_system_xcode
    Current value (from the default) = ""
      From //build_overrides/build.gni:48

    Use the system install of Xcode for tools like ibtool, libtool, etc.
    This does not affect the compiler. When this variable is false, targets will
    instead use a hermetic install of Xcode. [The hermetic install can be
    obtained with gclient sync after setting the environment variable
    FORCE_MAC_TOOLCHAIN].

use_system_zlib
    Current value (from the default) = false
      From //third_party/pdfium/pdfium.gni:60

    Don't build against bundled zlib.

use_thin_lto
    Current value (from the default) = false
      From //build/config/compiler/compiler.gni:46

    Enables support for ThinLTO, which links 3x-10x faster than full LTO. See
    also http://blog.llvm.org/2016/06/thinlto-scalable-and-incremental-lto.html

use_udev
    Current value (from the default) = true
      From //build/config/features.gni:49

    libudev usage. This currently only affects the content layer.

use_unofficial_version_number
    Current value (from the default) = true
      From //components/version_info/BUILD.gn:10

use_v4l2_codec
    Current value (from the default) = false
      From //media/gpu/args.gni:11

    Indicates if Video4Linux2 codec is used. This is used for all CrOS
    platforms which have v4l2 hardware encoder / decoder.

use_v4lplugin
    Current value (from the default) = false
      From //media/gpu/args.gni:7

    Indicates if V4L plugin is used.

use_v8_context_snapshot
    Current value (from the default) = false
      From //tools/v8_context_snapshot/v8_context_snapshot.gni:17

use_vaapi
    Current value (from the default) = false
      From //media/gpu/args.gni:15

    Indicates if VA-API-based hardware acceleration is to be used. This
    is typically the case on x86-based ChromeOS devices.

use_webaudio_ffmpeg
    Current value (from the default) = true
      From //third_party/WebKit/Source/config.gni:25

    If true, ffmpeg will be used for decoding audio.

use_xcode_clang
    Current value (from the default) = false
      From //build/toolchain/toolchain.gni:23

    Compile with Xcode version of clang instead of hermetic version shipped
    with the build. Used on iOS to ship official builds (as they are built
    with the version of clang shipped with Xcode).

use_xkbcommon
    Current value (from the default) = false
      From //ui/base/ui_features.gni:9

    Optional system library.

v8_android_log_stdout
    Current value (from the default) = false
      From //v8/BUILD.gn:23

    Print to stdout on Android.

v8_can_use_fpu_instructions
    Current value (from the default) = true
      From //v8/BUILD.gn:111

    Similar to vfp but on MIPS.

v8_check_microtasks_scopes_consistency
    Current value = false
      From //.gn:56
    Overridden from the default = ""
      From //v8/BUILD.gn:137

    Temporary flag to allow embedders to update their microtasks scopes
    while rolling in a new version of V8.

v8_code_coverage
    Current value (from the default) = false
      From //v8/gni/v8.gni:13

    Set flags for tracking code coverage. Uses gcov with gcc and sanitizer
    coverage with clang.

v8_correctness_fuzzer
    Current value (from the default) = false
      From //v8/gni/v8.gni:16

    Includes files needed for correctness fuzzing.

v8_current_cpu
    Current value (from the default) = "arm"
      From //build/config/v8_target_cpu.gni:60

    This argument is declared here so that it can be overridden in toolchains.
    It should never be explicitly set by the user.

v8_deprecation_warnings
    Current value (from the default) = false
      From //v8/BUILD.gn:35

    Enable compiler warnings when using V8_DEPRECATED apis.

v8_embed_script
    Current value (from the default) = ""
      From //v8/BUILD.gn:41

    Embeds the given script into the snapshot.

v8_embedder_string
    Current value (from the default) = ""
      From //v8/BUILD.gn:44

    Allows the embedder to add a custom suffix to the version string.

v8_enable_backtrace
    Current value (from the default) = ""
      From //v8/gni/v8.gni:32

    Support for backtrace_symbols on linux.

v8_enable_concurrent_marking
    Current value (from the default) = true
      From //v8/BUILD.gn:90

    Sets -dV8_CONCURRENT_MARKING

v8_enable_disassembler
    Current value (from the default) = ""
      From //v8/BUILD.gn:47

    Sets -dENABLE_DISASSEMBLER.

v8_enable_fast_mksnapshot
    Current value (from the default) = false
      From //v8/BUILD.gn:65

    Enable fast mksnapshot runs.

v8_enable_force_slow_path
    Current value (from the default) = ""
      From //v8/BUILD.gn:93

    Sets -dV8_ENABLE_FORCE_SLOW_PATH

v8_enable_future
    Current value (from the default) = false
      From //v8/BUILD.gn:26

    Sets -DV8_ENABLE_FUTURE.

v8_enable_gdbjit
    Current value = false
      From //.gn:51
    Overridden from the default = false
      From //v8/BUILD.gn:132

v8_enable_handle_zapping
    Current value (from the default) = true
      From //v8/BUILD.gn:59

    Sets -dENABLE_HANDLE_ZAPPING.

v8_enable_i18n_support
    Current value (from the default) = true
      From //v8/gni/v8.gni:44

    Enable ECMAScript Internationalization API. Enabling this feature will
    add a dependency on the ICU library.

v8_enable_object_print
    Current value (from the default) = ""
      From //v8/BUILD.gn:75

    Sets -dOBJECT_PRINT.

v8_enable_slow_dchecks
    Current value (from the default) = false
      From //v8/BUILD.gn:62

    Enable slow dchecks.

v8_enable_trace_feedback_updates
    Current value (from the default) = false
      From //v8/BUILD.gn:87

    Sets -dV8_TRACE_FEEDBACK_UPDATES.

v8_enable_trace_ignition
    Current value (from the default) = false
      From //v8/BUILD.gn:84

    Sets -dV8_TRACE_IGNITION.

v8_enable_trace_maps
    Current value (from the default) = ""
      From //v8/BUILD.gn:78

    Sets -dV8_TRACE_MAPS.

v8_enable_v8_checks
    Current value (from the default) = ""
      From //v8/BUILD.gn:81

    Sets -dV8_ENABLE_CHECKS.

v8_enable_verify_csa
    Current value (from the default) = false
      From //v8/BUILD.gn:68

    Enable code-generation-time checking of types in the CodeStubAssembler.

v8_enable_verify_heap
    Current value (from the default) = ""
      From //v8/BUILD.gn:29

    Sets -DVERIFY_HEAP.

v8_enable_verify_predictable
    Current value (from the default) = false
      From //v8/BUILD.gn:32

    Sets -DVERIFY_PREDICTABLE

v8_enable_vtunejit
    Current value (from the default) = false
      From //v8/BUILD.gn:56

    Sets -dENABLE_VTUNE_JIT_INTERFACE.

v8_experimental_extra_library_files
    Current value = ["//third_party/WebKit/Source/core/streams/TransformStream.js"]
      From //.gn:50
    Overridden from the default = ["//test/cctest/test-experimental-extra.js"]
      From //v8/BUILD.gn:129

v8_extra_library_files
    Current value = ["//third_party/WebKit/Source/core/streams/CommonOperations.js", "//third_party/WebKit/Source/core/streams/CommonStrings.js", "//third_party/WebKit/Source/core/streams/SimpleQueue.js", "//third_party/WebKit/Source/core/streams/ByteLengthQueuingStrategy.js", "//third_party/WebKit/Source/core/streams/CountQueuingStrategy.js", "//third_party/WebKit/Source/core/streams/ReadableStream.js", "//third_party/WebKit/Source/core/streams/WritableStream.js"]
      From //.gn:36
    Overridden from the default = ["//test/cctest/test-extra.js"]
      From //v8/BUILD.gn:123

    List of extra files to snapshot. They will be snapshotted in order so
    if files export symbols used by later files, they should go first.
   
    This default is used by cctests. Projects using V8 will want to override.

v8_gcmole
    Current value (from the default) = false
      From //v8/gni/v8.gni:26

    Indicate if gcmole was fetched as a hook to make it available on swarming.

v8_has_valgrind
    Current value (from the default) = false
      From //v8/gni/v8.gni:23

    Indicate if valgrind was fetched as a custom deps to make it available on
    swarming.

v8_imminent_deprecation_warnings
    Current value = false
      From //.gn:52
    Overridden from the default = false
      From //v8/BUILD.gn:38

    Enable compiler warnings when using V8_DEPRECATE_SOON apis.

v8_interpreted_regexp
    Current value (from the default) = false
      From //v8/BUILD.gn:72

    Interpreted regexp engine exists as platform-independent alternative
    based where the regular expression is compiled to a bytecode.

v8_monolithic
    Current value (from the default) = false
      From //v8/BUILD.gn:139

v8_multi_arch_build
    Current value (from the default) = false
      From //v8/gni/v8.gni:19

    Adds additional compile target for building multiple architectures at once.

v8_no_inline
    Current value (from the default) = false
      From //v8/BUILD.gn:105

    Switches off inlining in V8.

v8_optimized_debug
    Current value (from the default) = true
      From //v8/gni/v8.gni:29

    Turns on compiler optimizations in V8 in Debug build.

v8_os_page_size
    Current value (from the default) = "0"
      From //v8/BUILD.gn:108

    Override OS page size when generating snapshot

v8_perf_prof_unwinding_info
    Current value (from the default) = false
      From //v8/BUILD.gn:97

    Build the snapshot with unwinding information for perf.
    Sets -dV8_USE_SNAPSHOT_WITH_UNWINDING_INFO.

v8_postmortem_support
    Current value (from the default) = false
      From //v8/BUILD.gn:102

    With post mortem support enabled, metadata is embedded into libv8 that
    describes various parameters of the VM for use by debuggers. See
    tools/gen-postmortem-metadata.py for details.

v8_promise_internal_field_count
    Current value (from the default) = 0
      From //v8/BUILD.gn:50

    Sets the number of internal fields on promise objects.

v8_snapshot_toolchain
    Current value (from the default) = ""
      From //v8/snapshot_toolchain.gni:34

    The v8 snapshot needs to be built by code that is compiled with a
    toolchain that matches the bit-width of the target CPU, but runs on
    the host.

v8_static_library
    Current value (from the default) = false
      From //v8/gni/v8.gni:47

    Use static libraries instead of source_sets.

v8_target_cpu
    Current value (from the default) = ""
      From //build/config/v8_target_cpu.gni:33

    This arg is used when we want to tell the JIT-generating v8 code
    that we want to have it generate for an architecture that is different
    than the architecture that v8 will actually run on; we then run the
    code under an emulator. For example, we might run v8 on x86, but
    generate arm code and run that under emulation.
   
    This arg is defined here rather than in the v8 project because we want
    some of the common architecture-specific args (like arm_float_abi or
    mips_arch_variant) to be set to their defaults either if the current_cpu
    applies *or* if the v8_current_cpu applies.
   
    As described below, you can also specify the v8_target_cpu to use
    indirectly by specifying a `custom_toolchain` that contains v8_$cpu in the
    name after the normal toolchain.
   
    For example, `gn gen --args="custom_toolchain=...:clang_x64_v8_arm64"`
    is equivalent to setting --args=`v8_target_cpu="arm64"`. Setting
    `custom_toolchain` is more verbose but makes the toolchain that is
    (effectively) being used explicit.
   
    v8_target_cpu can only be used to target one architecture in a build,
    so if you wish to build multiple copies of v8 that are targeting
    different architectures, you will need to do something more
    complicated involving multiple toolchains along the lines of
    custom_toolchain, above.

v8_test_isolation_mode
    Current value (from the default) = "noop"
      From //v8/gni/isolate.gni:11

    Sets the test isolation mode (noop|prepare|check).

v8_typed_array_max_size_in_heap
    Current value (from the default) = 64
      From //v8/BUILD.gn:117

    Controls the threshold for on-heap/off-heap Typed Arrays.

v8_use_external_startup_data
    Current value (from the default) = ""
      From //v8/gni/v8.gni:40

    Use external files for startup data blobs:
    the JS builtins sources and the start snapshot.

v8_use_mips_abi_hardfloat
    Current value (from the default) = true
      From //v8/BUILD.gn:114

    Similar to the ARM hard float ABI but on MIPS.

v8_use_snapshot
    Current value (from the default) = true
      From //v8/gni/v8.gni:36

    Enable the snapshot feature, for fast context creation.
    http://v8project.blogspot.com/2015/09/custom-startup-snapshots.html

win_console_app
    Current value (from the default) = false
      From //build/config/win/console_app.gni:12

    If true, builds as a console app (rather than a windowed app), which allows
    logging to be printed to the user. This will cause a terminal window to pop
    up when the executable is not run from the command line, so should only be
    used for development. Only has an effect on Windows builds.

